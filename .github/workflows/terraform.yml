name: terraform-ci

on:
  pull_request: # run on PRs
    paths:
      - "infra/**"
      - "modules/**"
      - ".github/workflows/terraform.yml"

jobs:
  tf-dev-plan:
    name: Dev plan
    runs-on: ubuntu-latest # GitHub-hosted runner
    defaults:
      run:
        working-directory: infra/envs/dev # run Terraform in dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # Pulls your repo into the runner.

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
        # Pins the CLI version so CI matches your laptops.

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        # Exposes creds for the next steps. Needed because your backend is remote.

      - name: Terraform init
        run: terraform init -input=false
        # Connects to S3 backend and DDB lock with the CI user.

      - name: Terraform fmt
        run: terraform fmt -check
        # Fails PR if formatting is off.

      - name: Terraform validate
        run: terraform validate
        # Static validation of .tf files.

      - name: Terraform plan
        run: terraform plan -input=false -no-color
        # Reads state, calculates changes. Does not apply.
